{"version":3,"sources":["components/FotoItem.module.scss","index.module.scss","pages/Carrito.module.scss","pages/Productos.module.scss","pages/Home.tsx","pages/NavBar.tsx","reducers/fotosReducer.ts","helpers/getFotos.ts","contexts/FotosContext.tsx","components/FotoItem.tsx","pages/ProductoItem.tsx","pages/Productos.tsx","pages/SobreNosotros.tsx","pages/Pagina404.tsx","pages/Carrito.tsx","App.tsx","index.tsx","pages/NavBar.module.scss"],"names":["module","exports","red","Parrafo","styled","p","props","colorBlue","Home","location","useLocation","queryParams","URLSearchParams","search","console","log","get","className","styles","titulo","NavBar","mainHeader","container","to","navigation","activeClassName","activo","fotosReducer","state","action","type","map","foto","id","payload","esFavorita","enCarrito","getFotos","a","fetch","resp","json","fotos","initialFotos","url","FotosContext","createContext","FotosProvider","children","useReducer","dispatch","useEffect","then","Provider","value","useFotosState","useContext","useFotosDispatch","FotoItem","useState","hover","setHover","fotoItem","onMouseEnter","onMouseLeave","onClick","heart","iconCart","smooth","fotoImg","src","alt","ProductoItem","params","useParams","fotoSeleccionada","find","Number","productId","Productos","fotoGrid","exact","path","SobreNosotros","Pagina404","history","useHistory","setTimeout","push","Carrito","carritoFotos","filter","total","setTotal","length","carritoImgItem","basura","App","pageSection","component","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.a53879df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fotoItem\":\"FotoItem_fotoItem__QXtzv\",\"fotoImg\":\"FotoItem_fotoImg__2HKVi\",\"heart\":\"FotoItem_heart__2mdMV\",\"iconCart\":\"FotoItem_iconCart__21sOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageSection\":\"src_pageSection__1jtlM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"carritoImgItem\":\"Carrito_carritoImgItem__1idug\",\"basura\":\"Carrito_basura__yckWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fotoGrid\":\"Productos_fotoGrid__A1QrH\"};","import { useLocation } from 'react-router';\r\n\r\n//Importamos styled-components\r\nimport styled from 'styled-components';\r\n//Importamos los estilos con el formato CSS Modules\r\nimport styles from '../index.module.scss';\r\n\r\nconst Home: React.FC = () => {\r\n\r\n    //Muestra simple de cómo usamos \"useLocation()\" para poder tener acceso a los datos dentro de una query\r\n    //Dentro de \"location.search\" encontramos el string de toda la query\r\n    const location = useLocation();\r\n    \r\n    //Usando URLSearchParams podemos capturar cada dato o hacer otras cosas.\r\n    const queryParams = new URLSearchParams(location.search)\r\n    console.log(queryParams.get('id'));\r\n    \r\n    return (\r\n        <>\r\n            <h1 className={styles.titulo}>\r\n            ¡Bienvenid@ a mi homepage! \r\n            </h1>\r\n            <Parrafo>Este es un <span>subtitulo</span> creado con Styled Components</Parrafo>\r\n        </>\r\n    )\r\n}\r\n\r\n//Ejemplo de un styled component con un color dinámico\r\nconst red = '#ff5555';\r\n//En este caso tenemos que pasar  un tipado porque preguntamos acerca de sus props\r\ninterface ParrafoProps {\r\n    colorBlue?: boolean;\r\n}\r\nconst Parrafo = styled.p<ParrafoProps>`\r\nfont-size: 1.2em;\r\ncolor: ${red};\r\n& span {\r\n    font-weight: bold;\r\n        /** Styled Components puede utilizar las props como una función anónima que recibe estas props en su primer parámetro **/\r\n        color: ${props => props.colorBlue ? 'blue' : red }\r\n    }\r\n`;\r\n\r\nexport default Home;","import { Link, NavLink } from 'react-router-dom';\r\n\r\nimport styles from './NavBar.module.scss';\r\n\r\nconst NavBar: React.FC = () => {\r\n    return (\r\n        <header className={styles.mainHeader} >\r\n            <div className={styles.container}>\r\n                {/* Link se usa para poder ir de una url a otra si hacer peticiones al servidor */}\r\n                <h1><Link to=\"/\">MiTienda</Link></h1>\r\n                <nav className={styles.navigation}>\r\n                    <ul>\r\n                        <li>\r\n                            {/* NavLink se usa igual que Link pero nos da la posibilidad de añadir una clase al alemento que esté activo para diferenciarlo del resto. */}\r\n                            <NavLink activeClassName={styles.activo} to=\"/productos\">Productos</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink activeClassName={styles.activo} to=\"/nosotros\">Sobre Nosotros</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/carrito\" activeClassName={styles.activo}><i className=\"fas fa-shopping-cart\"></i></NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavBar;","interface Foto {\r\n    id: number;\r\n    url: string;\r\n    esFavorita: boolean;\r\n    enCarrito: boolean;\r\n}\r\ntype State = Foto[];\r\n//Usando type podemos darle varias opciones de \"acciones\" así nos ayudará a no equivocarnos después.\r\ntype Action = \r\n    | { type: 'fetch fotos', payload: Foto[] } \r\n    | {type: 'addToFavoritas', payload: number}\r\n    | {type: 'toggleCarrito', payload: number}\r\n\r\n//Nuestro reducer tiene que ser una FUNCIÓN PURA:\r\n    //Nunca afecta a nada del exterior\r\n    //Pasándole siempre los mismos datos devolverá exactamente el mismo resultado. (Ej: No podemos usar metodos como random() en su interior)\r\nconst fotosReducer = (state:State, action: Action) => {\r\n    //Hay que vigilar muchísimo que siempre se devuelva un estado completamente nuevo, no modificar el existente.\r\n    switch(action.type){\r\n        case 'addToFavoritas':{\r\n            const newArray = state.map(foto => {\r\n                if(foto.id === action.payload) {\r\n                    return {...foto, esFavorita: !foto.esFavorita}\r\n                } else{\r\n                    return foto;\r\n                }\r\n            })\r\n            return newArray;\r\n        }\r\n        case 'toggleCarrito':{\r\n            const newArray = state.map(foto => {\r\n                if(foto.id === action.payload) {\r\n                    return {...foto, enCarrito: !foto.enCarrito}\r\n                } else{\r\n                    return foto;\r\n                }\r\n            })\r\n            return newArray;\r\n        }\r\n        case 'fetch fotos':\r\n            return action.payload;                           \r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport type { State, Action, Foto };\r\nexport default fotosReducer;","//Importamos nuestras fotos en este caso de un repositorio de mi cuenta en la que tengo una serie de fotos\r\n\r\nconst getFotos = async () => {\r\n    const resp = await fetch('https://raw.githubusercontent.com/Ivluengo/tienda-fotos-react-typescript/main/src/fotos-animales/listaFotos.json');\r\n    const fotos = await resp.json();\r\n\r\n    return fotos;\r\n}\r\n\r\nexport default getFotos;","import {createContext, useContext, useEffect, useReducer} from 'react';\r\nimport fotosReducer, { Action, State } from './../reducers/fotosReducer';\r\nimport getFotos from './../helpers/getFotos';\r\n\r\n//Tipado que tendrá nuestro contexto, enviaremos nuestro \"state\" global y nuestro \"dispatch\" para modificar ese \"state\"\r\ntype FotosContextData = [ \r\n    state: State, \r\n    dispatch: React.Dispatch<Action> \r\n];\r\n\r\n//Estado inicial de nuestro useReducer\r\nconst initialFotos = [{id: 0, url: '', esFavorita: false, enCarrito: false }];\r\n\r\nconst FotosContext = createContext({} as FotosContextData);\r\n\r\n//Creamos un componente que usaremos de Provider de nuestro contexto\r\nconst FotosProvider: React.FC = ( {children} ) => {\r\n\r\n    //Configuramos nuestro useReducer para poder enviar \"state\" y \"dispatch\" a través del contexto\r\n    const [state, dispatch] = useReducer(fotosReducer, initialFotos);\r\n\r\n    //Pedimos al servidor lo que queramos, en nuestro caso las fotos\r\n    useEffect(()=> {\r\n        //Hemos utilizado un helper para hacer ese fetch\r\n        getFotos().then(fotos => {\r\n            //Cuando recibimos las fotos  las enviamos a nuestro estado global\r\n            dispatch({type: 'fetch fotos', payload: fotos})\r\n        });\r\n    }, [/* Al no poner nada aquí solo se ejecutará al montar el componente y nunca más */])\r\n\r\n\r\n    return (\r\n        //Tenemos que llamar al \"Provider\" dentro de nuestro contexto para enviar dentro de \"value\" lo que queramos\r\n        <FotosContext.Provider value={[state, dispatch]}>\r\n            {children}\r\n        </FotosContext.Provider>\r\n    )\r\n}\r\n\r\n//He creado dos custom hooks para usar el contexto que tenemos y recibir directamente nuestro \"state\" o nuestro \"dispatch\"\r\nconst useFotosState = () => useContext(FotosContext)[0];\r\nconst useFotosDispatch = () => useContext(FotosContext)[1];\r\n\r\nexport {FotosProvider, useFotosState, useFotosDispatch};\r\nexport default FotosContext;\r\n","import { useState } from \"react\";\r\n//Este paquete se usa para poder hacer link hacia una parte de una página usando el típico \"#anchor\", no funciona de forma nativa.\r\nimport {HashLink} from 'react-router-hash-link';\r\n\r\nimport { useFotosDispatch } from \"../contexts/FotosContext\";\r\nimport {Foto} from \"../reducers/fotosReducer\";\r\n\r\nimport styles from './FotoItem.module.scss';\r\n\r\ninterface FotoItemProps {\r\n    foto: Foto;\r\n}\r\n\r\nconst FotoItem: React.FC<FotoItemProps> = ({foto}) => {\r\n    const dispatch = useFotosDispatch();\r\n    const [hover, setHover] = useState(false)\r\n\r\n    //Funciones que retornan un icono o otro dependiendo de si está marcado, en hover, etc.\r\n    const heartIcon = () => {\r\n        if(foto.esFavorita) {\r\n            return <i \r\n            onClick={() => dispatch({type: 'addToFavoritas', payload: foto.id})}\r\n            className={`fas fa-heart ${styles.heart}`}></i>\r\n        }else if (hover) {\r\n            return <i \r\n            onClick={() => dispatch({type: 'addToFavoritas', payload: foto.id})}\r\n            className={`far fa-heart ${styles.heart}`}></i>\r\n        }\r\n    }\r\n    const cartIcon = () => {\r\n        if(foto.enCarrito) {\r\n            return <i \r\n            onClick={() => dispatch({type: 'toggleCarrito', payload: foto.id})}\r\n            className={`fas fa-shopping-cart ${styles.iconCart}`}></i>\r\n        }else if (hover) {\r\n            return <i \r\n            onClick={() => dispatch({type: 'toggleCarrito', payload: foto.id})}\r\n            className={`fas fa-plus-circle ${styles.iconCart}`}></i>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <div className={styles.fotoItem}   \r\n                //vigilamos si hacemos hover en el div de la imagen poniendo \"true\" cuando entramos y \"false\" cuando salimos \r\n                onMouseEnter={ ()=>setHover(true) }\r\n                onMouseLeave={ ()=>setHover(false) }\r\n            >       \r\n                {/* Imprimimos los iconos según el estado a través de sus funciones */}\r\n                {heartIcon()}\r\n                {cartIcon()}\r\n\r\n                {/* Lo usamos de la misma forma que Link, tiene la prop smooth, entre otras, que se usa si quieres suavizar el scroll. */}\r\n                <HashLink smooth to={`/productos/${foto.id}#detalle`} >\r\n                    <img                    \r\n                        className={styles.fotoImg}\r\n                        src={foto.url}\r\n                        alt={foto.url}\r\n                        />\r\n                </HashLink>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FotoItem;","import { useParams } from \"react-router\";\r\nimport FotoItem from \"../components/FotoItem\";\r\nimport { useFotosState } from \"../contexts/FotosContext\";\r\n\r\ninterface ProductParams {\r\n    productId: string;\r\n}\r\n\r\nconst ProductoItem: React.FC = () => {\r\n    //con el hook useParams podemos recibir el \"id\" que viene en la url\r\n    const params: ProductParams = useParams();  \r\n    const fotos = useFotosState(); \r\n    \r\n    //Comprobamos la foto que se ha clicado\r\n    const fotoSeleccionada = fotos.find(foto => { \r\n        return Number(foto.id) === Number(params.productId) \r\n    });\r\n    \r\n    return (\r\n        <div id=\"detalle\">\r\n            <h1>¡Producto al detalle!</h1>            \r\n            <FotoItem foto={fotoSeleccionada!} />\r\n            <h4>Precio: 3,99€</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductoItem;","import { Route } from 'react-router-dom';\r\nimport FotoItem from '../components/FotoItem';\r\nimport  { useFotosState } from '../contexts/FotosContext';\r\nimport ProductoItem from './ProductoItem';\r\n\r\nimport styles from './Productos.module.scss';\r\n\r\nconst Productos = () => {\r\n    //importamos el estado global desde el hook que importa de nuestro contexto\r\n    const fotos = useFotosState();\r\n\r\n    return (\r\n        <>\r\n            <h1>Página de Productos</h1>\r\n            <main className={styles.fotoGrid}>\r\n                {fotos.map((foto)=> ( \r\n                    <FotoItem key={foto.id} foto={foto} />\r\n                ))}\r\n            </main>\r\n\r\n            {/* Aquí tenemos nuestro  Route que vigila solo los productos  únicos para mostrarlos debajo*/}\r\n            <Route exact path='/productos/:productId/'>\r\n                <ProductoItem />\r\n            </Route>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Productos;","const SobreNosotros: React.FC = () => {\r\n    return (\r\n        <>\r\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam in nulla nobis doloribus facilis illo accusantium officiis veniam dolorum voluptas, tempore consectetur iste ullam sequi alias modi quibusdam quod ipsa! Distinctio minima odio dicta doloremque non alias expedita, architecto fugit debitis vel consequuntur quibusdam earum laudantium. Dolores distinctio expedita dolor.</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SobreNosotros;","import { useHistory } from \"react-router-dom\";\r\n\r\nconst Pagina404: React.FC = () => {\r\n    //useHistory nos da muchas posibilidades a lahora de usar  la \"History API\". Podemos tirar atrás, adelante, pasar datos, etc.\r\n    const history = useHistory();    \r\n\r\n    setTimeout(()=>{\r\n        //En este caso \"push\" nos lleva a esta dirección manteniendo la historia anterior para poder volver.\r\n        history.push('/');\r\n    }, 3000)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Te has confundido y esta página no existe</h1>\r\n            <h4>En unos segundos vas a ser redirigido a nuestra página de inicio</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagina404;","import { useEffect, useState } from \"react\";\r\nimport { useFotosDispatch, useFotosState } from \"../contexts/FotosContext\";\r\nimport styles from './Carrito.module.scss';\r\n\r\nconst Carrito: React.FC = () => {\r\n\r\n    const fotos = useFotosState();\r\n    const dispatch = useFotosDispatch();\r\n    const carritoFotos = fotos.filter(foto => foto.enCarrito );\r\n    \r\n    //Estado que controlará el precio total de todos los elementos sumados\r\n    const [total, setTotal] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        //En este caso he puesto el mismo precio a todo pero eso debería llegar de forma dinámica\r\n        setTotal(carritoFotos.length * 3.99);\r\n    },[carritoFotos.length])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Carrito de fotos</h1>\r\n                {\r\n                carritoFotos.map((foto)=> (\r\n                    <div key={foto.id} className={styles.carritoImgItem}>\r\n                        <img src={foto.url} alt={foto.url}/>\r\n                        <h4>Precio: 3.99€</h4>\r\n                        <i \r\n                            className={`fas fa-trash ${styles.basura}`}\r\n                            onClick={() => dispatch({type: 'toggleCarrito', payload: foto.id})}\r\n                        ></i>\r\n                    </div>\r\n                ))\r\n                }\r\n            \r\n            <h3>Total = {total}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carrito\r\n","import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Home from \"./pages/Home\";\nimport NavBar from './pages/NavBar';\nimport Productos from './pages/Productos';\nimport SobreNosotros from './pages/SobreNosotros';\nimport Pagina404 from './pages/Pagina404';\nimport Carrito from './pages/Carrito';\n// import ProductoItem from './pages/ProductoItem';\n\nimport {FotosProvider} from './contexts/FotosContext';\n\nimport styles from './index.module.scss';\n\n\nconst  App: React.FC = () => {\n    return (\n        <>\n            {/* Envolvemos todos los componentes que queramos que dispongan de nuestro \"estado global\" con nuestro provider que hemos creado */}\n            <FotosProvider>\n                {/* Al estar fuera de nuestro Switch, \"NavBar\" se mostrará en todas las páginas */}\n                <NavBar />\n                <section className={styles.pageSection}>\n                    {/* Switch hace que solo nos muestre la primera ruta que coincida, no varias */}\n                    <Switch>\n                        {/* Utilizamos \"exact\" para decir que solo si escribimos exactamente esta ruta nos leve a ella */}\n                        <Route exact path='/'>\n                            <Home />\n                        </Route>\n\n                        {/* Prueba de una redirección */}\n                        <Route path='/home'>\n                            <Redirect to='/' />\n                        </Route>\n                        <Route path='/productos'>\n                            <Productos />\n                        </Route>\n                        {/* He comentado la siguiente ruta porque la hemos pasado directamente dentro de nuestra página productos para que se encargue ella */}\n                        {/* <Route path='/productos/:productId'>\n                                <ProductoItem />\n                        </Route> */}\n                        <Route path='/nosotros'>\n                            <SobreNosotros />\n                        </Route>\n                        {/* También podemos crear rutas que se autocierran con la prop \"component\" para simplificar */}\n                        <Route path='/carrito' component={Carrito} />\n                        {/* El asterisco \"*\" nos lleva acualquier ruta, y al ponerlo al final le estamos diciendo que siempre que no coincida con todo lo de arriba nos lleve a nuestro 404 */}\n                        <Route path='*'>\n                            <Pagina404 />\n                        </Route>\n                    </Switch>\n                </section>\n            </FotosProvider>\n        </>\n    );\n}\n\nexport default App;\n","import * as ReactDOM from 'react-dom';\n//podemos usar BrowserRouter directamente pero en muchos sitios se crea el alias de Router para simplificar\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\n//Nuestro Router siempre tiene que envolver aquello que queramos que pueda usar Route, Switch, etc.\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"NavBar_mainHeader__yuaaP\",\"container\":\"NavBar_container__2g_6V\",\"navigation\":\"NavBar_navigation__1SkrY\",\"activo\":\"NavBar_activo__TyZe1\"};"],"sourceRoot":""}